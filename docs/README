The documentation for Brandy consists of the following files:

use             This describes how to use the interpreter and
                lists the differences between it and Acorn's
                interpreter and its limitations.

messages        This file describes all the error messages that the
                interpreter can produce and what they mean.

graphics        This contains notes on the program's graphics
                support.

basic           This is a brief introduction to Basic VI.

internals       This gives a high level view of the interpreter's
                internals. It is not a line-by-line account of
                how it works but shows how the various components
                fit together.

compiling       Instructions for compiling the program under
                various operating systems.

history         A list of changes and bug fixes in the different
                versions of the program.

ChangeLog       A more detailed list of changes and bug fixes
                beginning with V1.21.0.

Mode7           This contains notes on the program's Mode 7 Teletext
                support.

networking      This contains some notes on the implementation of
                network connectivity that was added in V1.21.6.

RISC-OS         This contains some notes on how the RISC OS build differs.

Brandy implements Basic VI, the the 64-bit floating-point mathematics
variant of the dialect of Basic that Acorn Computers supplied with their
ranges of desktop computers that use the ARM processor such as the Archimedes
and RiscPC. Basic V and VI are an extended version of BBC Basic. This was the
Basic used on the BBC Micro that Acorn made during the early 1980s.

There is some very useful documentation for the BBC Micro
available on the Internet. One very good site is 'The BBC Lives!'
at:

        http://archive.retro-kit.co.uk/bbc.nvg.org/

The best manual to look at is the BBC User's Guide. It is useful
in that it gives a lot of background information on BBC Basic and
the environment in which it runs. It should help in understanding
this interpreter better.
